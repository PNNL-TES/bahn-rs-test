x <- "banana" #
y <- rep(x, 1e5) #
#
object.size(x) #
object.size(y) / 1e5
?object.size
object.size(y)
?object.size
object.size(y,units="Kb")
object.size(y)/1024
as.numeric(object.size(y))
as.numeric(object.size(y))/1024
library(devtools)
install.packages("devtools")
help(package="devtools")
library(ggplot2)
head(mtcars)
ma <- function(x,n=5){filter(x,rep(1/n,n), sides=2)}
ma(mtcars$mpg)
ma(mtcars$mpg)[1]
ma(mtcars$mpg)[3]
?filter
x <- c(1,2,3,4,5,6,7,8,9,10)
ma(x)
ma(x,n=5)
ma(x,n=1)
ma(x,n=2)
ma <- function(x,n=5,s=2){filter(x,rep(1/n,n), sides=s)}
ma(x,n=2)
ma(x,n=2,s=1)
?filter
ma <- function(x,n=5,s=1){filter(x,rep(1/n,n), sides=s)}
head(mtcars)
summary(mtcars)
mtcars$cyl <- as.factor(mtcars$cyl)
summary(mtcars)
library(plyr)
ddply(mtcars,.(cyl),.fun=ma)
?ddply
?mutate
ddply(mtcars,.(cyl),transform,disp=ma(disp))
ma(mtcars$disp)
as.numeric(ma(mtcars$disp))
ddply(mtcars,.(cyl),transform,disp=as.numeric(ma(disp)))
mtcars
library(ggplot2)
qplot(1,1)
qplot(1,1)+ylab(substitute(italic(r)^2))
qplot(1,1)+ylab(substitute(italic(R)^2))
library(ggplot2)
?geom_bar
d[d$value>=0,]
subset(d,value>=0)
?cat
1 == 1
1 == 1 == 2
df <- structure(list(x = 1:10, y = c(0, 0.693147180559945, 1.09861228866811, #
1.38629436111989, 1.6094379124341, 1.79175946922805, 1.94591014905531, #
2.07944154167984, 2.19722457733622, 2.30258509299405), slope = c(NA, #
0.549306144334055, 0.346573590279972, 0.255412811882995, 0.202732554054082, #
0.168236118310606, 0.14384103622589, 0.125657214140453, 0.111571775657105, #
NA)), .Names = c("x", "y", "slope"), class = "data.frame", row.names = c(NA, #
-10L))
df
log(1:10)
df <- data.frame( x=1:10, y=log(1:10 ) )
df
library(ggplot2)
qplot(x,y,data=df)
lm(y~x,data=df)
qplot(x,y,data=df)+geom_smooth(method="lm")
lm(y~x,data=df)
lm(y~x,data=df)$coefficients['x']
m <- lm(y~x,data=df)#
#
qplot(x,y,data=df)+geom_smooth(method="lm")#
#
m$coefficients['x']
lmslope <- function(d) { as.numeric(lm(y~x,data=as.data.frame(d))$coefficients['x']) }
lmslope(df)
df
library( zoo )
df$z <- rollapply(df,width=3,fill=NA,by.column=FALSE,FUN=mean)
df
df$mean <- rollapply(df,width=3,fill=NA,by.column=FALSE,FUN=mean)
df
df$slope <- rollapply(df[-3],width=3,fill=NA,by.column=FALSE,FUN=lmslope)
df
qplot(x,slope,data=df)
qplot(x,slope,data=df)+geom_point(aes(y=y))
qplot(x,slope,data=df)+geom_point(aes(y=y),color="red")
qplot(x,y,data=df)+geom_line(aes(y=slope),color="red")
df <- structure(list(x = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, #
1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L), y = c(0, 0.693147180559945, #
1.09861228866811, 1.38629436111989, 1.6094379124341, 1.79175946922805, #
1.94591014905531, 2.07944154167984, 2.19722457733622, 2.30258509299405, #
-0.474678075639531, 0.793487989767355, 1.05942784431699, 1.18688586601968, #
1.65973391869268, 1.94146187664774, 2.1891041817486, 2.42198812623013, #
2.27181820679141, 1.96882937305294), model = c("a", "a", "a", #
"a", "a", "a", "a", "a", "a", "a", "b", "b", "b", "b", "b", "b", #
"b", "b", "b", "b")), .Names = c("x", "y", "model"), row.names = c(NA, #
20L), class = "data.frame")
df
df2 <- structure(list(x = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, #
1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L), y = c(0, 0.693147180559945, #
1.09861228866811, 1.38629436111989, 1.6094379124341, 1.79175946922805, #
1.94591014905531, 2.07944154167984, 2.19722457733622, 2.30258509299405, #
-0.474678075639531, 0.793487989767355, 1.05942784431699, 1.18688586601968, #
1.65973391869268, 1.94146187664774, 2.1891041817486, 2.42198812623013, #
2.27181820679141, 1.96882937305294), model = c("a", "a", "a", #
"a", "a", "a", "a", "a", "a", "a", "b", "b", "b", "b", "b", "b", #
"b", "b", "b", "b")), .Names = c("x", "y", "model"), row.names = c(NA, #
20L), class = "data.frame")#
qplot(x,y,color=model,data=df2
)
df2 <- structure(list(x = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, #
1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L), y = c(0, 0.693147180559945, #
1.09861228866811, 1.38629436111989, 1.6094379124341, 1.79175946922805, #
1.94591014905531, 2.07944154167984, 2.19722457733622, 2.30258509299405, #
-0.474678075639531, 0.793487989767355, 1.05942784431699, 1.18688586601968, #
1.65973391869268, 1.94146187664774, 2.1891041817486, 2.42198812623013, #
2.27181820679141, 1.96882937305294), model = c("a", "a", "a", #
"a", "a", "a", "a", "a", "a", "a", "b", "b", "b", "b", "b", "b", #
"b", "b", "b", "b")), .Names = c("x", "y", "model"), row.names = c(NA, #
20L), class = "data.frame")#
qplot(x,y,color=model,data=df2)
df <- data.frame( x=1:10, y=log(1:10 ) )
df$model <- "a"
df1 <- df
df1$model <- "b"
df1$y <- df$y + runif(min=-.5,max=.5)
df1$y <- df$y + runif(n=10,min=-.5,max=.5)
df1
df2 <- rbind(df,df1)
qplot(x,y,color=model,data=df2)
library(plyr)
ddply( df2, .(model), nrow )
ddply( df2, .(model), summarize, count=nrow )
ddply( df2, .(model), summarize, ct=nrow )
ddply( df2, .(model), summarize, ct=nrow(model) )
ddply( df2, .(model), summarize, count=length(x) )
ddply( df2, .(model), mutate, mean=mean(x) )
ddply( df2, .(model), mutate, meany=mean(y) )
ddply(df2,.(model),.fun=function(d) data.frame(slope=rollapply(d[-3],width=3,fill=NA,by.column=FALSE,FUN=lmslope)))
df2$slope <- results$slope
results <- ddply(df2,.(model),.fun=function(d) data.frame(slope=rollapply(d[-3],width=3,fill=NA,by.column=FALSE,FUN=lmslope)))
df2$slope <- results$slope
df2
qplot(x,y,color=model,data=df2)+geom_line(aes(y=slope))
df <- data.frame( x=1:10, y=log(1:10 ) )
df
library(ggplot2)
qplot(x,y,data=df)
m <- lm(y~x,data=df)
m
m$coefficients['x']
qplot(x,y,data=df)+geom_smooth(method="lm")
lmslope <- function(d) { as.numeric(lm(y~x,data=as.data.frame(d))$coefficients['x']) }
lmslope(df)
library(zoo)
df$mean <- rollapply(df,width=3,fill=NA,by.column=FALSE,FUN=mean)
df
?rollapply
df$mean <- rollapply(df$y,width=3,fill=NA,by.column=FALSE,FUN=mean)
df
mean(c(0,.693,1.099))
df$slope <- rollapply(df[-3],width=3,fill=NA,by.column=FALSE,FUN=lmslope)
df
qplot(x,y,data=df)+geom_line(aes(y=slope),color="red")
df$model <- "a"#
df1 <- df#
df1$model <- "b"#
df1$y <- df$y + runif(n=10,min=-.5,max=.5)#
df2 <- rbind(df,df1)
df2
qplot(x,y,color=model,data=df2)
library(plyr)
ddply( df2, .(model), summarize, count=length(x) )
ddply( df2, .(model), mutate, meany=mean(y) )
results <- ddply(df2,.(model),.fun=function(d) data.frame(slope=rollapply(d[-3],width=3,fill=NA,by.column=FALSE,FUN=lmslope)))
results
df2 <- rbind(df,df1)
df2
df <- data.frame( x=1:10, y=log(1:10 ) )
df$model <- "a"#
df1 <- df#
df1$model <- "b"#
df1$y <- df$y + runif(n=10,min=-.5,max=.5)#
df2 <- rbind(df,df1)
df2
results <- ddply(df2,.(model),.fun=function(d) data.frame(slope=rollapply(d[-3],width=3,fill=NA,by.column=FALSE,FUN=lmslope)))
results
df2$slope <- results$slope
df2
qplot(x,y,color=model,data=df2)+geom_line(aes(y=slope))
plot(exp(sin(1:50))
)
plot(exp(sin(1:50)),type="l")
plot(exp(sin(1:10)),type="l")
plot(exp(sin(seq(1,10,.1))),type="l")
?median
library(ggplot2)
mydata <- data.frame(x = c(rpois(500, 1),20))#
ggplot(mydata, aes(x=x)) + geom_dotplot()
data3.a <- structure(list(Fecha = structure(c(10957, 10958, 10959, 10960, #
10961, 10962, 10963, 10964, 10965, 10966, 10967, 10968, 10969, #
10970, 10971, 10972, 10973, 10974, 10975, 10976, 10977, 10978, #
10979, 10980, 10981, 10982, 10983, 10984, 10985, 10986, 10987, #
10988, 10989, 10990, 10991, 10992, 10993, 10994, 10995, 10996, #
10997, 10998, 10999, 11000, 11001, 11002, 11003, 11004, 11005, #
11006, 11007, 11008, 11009, 11010, 11011, 11012, 11013, 11014, #
11015, 11016, 11017, 11018, 11019, 11020, 11021, 11022, 11023, #
11024, 11025, 11026, 11027, 11028, 11029, 11030, 11031, 11032, #
11033, 11034, 11035, 11036, 11037, 11038, 11039, 11040, 11041, #
11042, 11043, 11044, 11045, 11046, 11047, 11048, 11049, 11050, #
11051, 11052, 11053, 11054, 11055, 11056, 11057, 11058, 11059, #
11060, 11061, 11062, 11063, 11064, 11065, 11066, 11067, 11068, #
11069, 11070, 11071, 11072, 11073, 11074, 11075, 11076, 11077, #
11078, 11079, 11080, 11081, 11082, 11083, 11084, 11085, 11086, #
11087, 11088, 11089, 11090, 11091, 11092, 11093, 11094, 11095, #
11096, 11097, 11098, 11099, 11100, 11101, 11102, 11103, 11104, #
11105, 11106, 11107, 11108, 11109, 11110, 11111, 11112, 11113, #
11114, 11115, 11116, 11117, 11118, 11119, 11120, 11121, 11122, #
11123, 11124, 11125, 11126, 11127, 11128, 11129, 11130, 11131, #
11132, 11133, 11134, 11135, 11136, 11137, 11138, 11139, 11140, #
11141, 11142, 11143, 11144, 11145, 11146, 11147, 11148, 11149, #
11150, 11151, 11152, 11153, 11154, 11155, 11156, 11157, 11158, #
11159, 11160, 11161, 11162, 11163, 11164, 11165, 11166, 11167, #
11168, 11169, 11170, 11171, 11172, 11173, 11174, 11175, 11176, #
11177, 11178, 11179, 11180, 11181, 11182, 11183, 11184, 11185, #
11186, 11187, 11188, 11189, 11190, 11191, 11192, 11193, 11194, #
11195, 11196, 11197, 11198, 11199, 11200, 11201, 11202, 11203, #
11204, 11205, 11206, 11207, 11208, 11209, 11210, 11211, 11212, #
11213, 11214, 11215, 11216, 11217, 11218, 11219, 11220, 11221, #
11222, 11223, 11224, 11225, 11226, 11227, 11228, 11229, 11230, #
11231, 11232, 11233, 11234, 11235, 11236, 11237, 11238, 11239, #
11240, 11241, 11242, 11243, 11244, 11245, 11246, 11247, 11248, #
11249, 11250, 11251, 11252, 11253, 11254, 11255, 11256, 11257, #
11258, 11259, 11260, 11261, 11262, 11263, 11264, 11265, 11266, #
11267, 11268, 11269, 11270, 11271, 11272, 11273, 11274, 11275, #
11276, 11277, 11278, 11279, 11280, 11281, 11282, 11283, 11284, #
11285, 11286, 11287, 11288, 11289, 11290, 11291, 11292, 11293, #
11294, 11295, 11296, 11297, 11298, 11299, 11300, 11301, 11302, #
11303, 11304, 11305, 11306, 11307, 11308, 11309, 11310, 11311, #
11312, 11313, 11314, 11315, 11316, 11317, 11318, 11319, 11320, #
11321, 11322, 10957, 10958, 10959, 10960, 10961, 10962, 10963, #
10964, 10965, 10966, 10967, 10968, 10969, 10970, 10971, 10972, #
10973, 10974, 10975, 10976, 10977, 10978, 10979, 10980, 10981, #
10982, 10983, 10984, 10985, 10986, 10987, 10988, 10989, 10990, #
10991, 10992, 10993, 10994, 10995, 10996, 10997, 10998, 10999, #
11000, 11001, 11002, 11003, 11004, 11005, 11006, 11007, 11008, #
11009, 11010, 11011, 11012, 11013, 11014, 11015, 11016, 11017, #
11018, 11019, 11020, 11021, 11022, 11023, 11024, 11025, 11026, #
11027, 11028, 11029, 11030, 11031, 11032, 11033, 11034, 11035, #
11036, 11037, 11038, 11039, 11040, 11041, 11042, 11043, 11044, #
11045, 11046, 11047, 11048, 11049, 11050, 11051, 11052, 11053, #
11054, 11055, 11056, 11057, 11058, 11059, 11060, 11061, 11062, #
11063, 11064, 11065, 11066, 11067, 11068, 11069, 11070, 11071, #
11072, 11073, 11074, 11075, 11076, 11077, 11078, 11079, 11080, #
11081, 11082, 11083, 11084, 11085, 11086, 11087, 11088, 11089, #
11090, 11091, 11092, 11093, 11094, 11095, 11096, 11097, 11098, #
11099, 11100, 11101, 11102, 11103, 11104, 11105, 11106, 11107, #
11108, 11109, 11110, 11111, 11112, 11113, 11114, 11115, 11116, #
11117, 11118, 11119, 11120, 11121, 11122, 11123, 11124, 11125, #
11126, 11127, 11128, 11129, 11130, 11131, 11132, 11133, 11134, #
11135, 11136, 11137, 11138, 11139, 11140, 11141, 11142, 11143, #
11144, 11145, 11146, 11147, 11148, 11149, 11150, 11151, 11152, #
11153, 11154, 11155, 11156, 11157, 11158, 11159, 11160, 11161, #
11162, 11163, 11164, 11165, 11166, 11167, 11168, 11169, 11170, #
11171, 11172, 11173, 11174, 11175, 11176, 11177, 11178, 11179, #
11180, 11181, 11182, 11183, 11184, 11185, 11186, 11187, 11188, #
11189, 11190, 11191, 11192, 11193, 11194, 11195, 11196, 11197, #
11198, 11199, 11200, 11201, 11202, 11203, 11204, 11205, 11206, #
11207, 11208, 11209, 11210, 11211, 11212, 11213, 11214, 11215, #
11216, 11217, 11218, 11219, 11220, 11221, 11222, 11223, 11224, #
11225, 11226, 11227, 11228, 11229, 11230, 11231, 11232, 11233, #
11234, 11235, 11236, 11237, 11238, 11239, 11240, 11241, 11242, #
11243, 11244, 11245, 11246, 11247, 11248, 11249, 11250, 11251, #
11252, 11253, 11254, 11255, 11256, 11257, 11258, 11259, 11260, #
11261, 11262, 11263, 11264, 11265, 11266, 11267, 11268, 11269, #
11270, 11271, 11272, 11273, 11274, 11275, 11276, 11277, 11278, #
11279, 11280, 11281, 11282, 11283, 11284, 11285, 11286, 11287, #
11288, 11289, 11290, 11291, 11292, 11293, 11294, 11295, 11296, #
11297, 11298, 11299, 11300, 11301, 11302, 11303, 11304, 11305, #
11306, 11307, 11308, 11309, 11310, 11311, 11312, 11313, 11314, #
11315, 11316, 11317, 11318, 11319, 11320, 11321, 11322, 10957, #
10958, 10959, 10960, 10961, 10962, 10963, 10964, 10965, 10966, #
10967, 10968, 10969, 10970, 10971, 10972, 10973, 10974, 10975, #
10976, 10977, 10978, 10979, 10980, 10981, 10982, 10983, 10984, #
10985, 10986, 10987, 10988, 10989, 10990, 10991, 10992, 10993, #
10994, 10995, 10996, 10997, 10998, 10999, 11000, 11001, 11002, #
11003, 11004, 11005, 11006, 11007, 11008, 11009, 11010, 11011, #
11012, 11013, 11014, 11015, 11016, 11017, 11018, 11019, 11020, #
11021, 11022, 11023, 11024, 11025, 11026, 11027, 11028, 11029, #
11030, 11031, 11032, 11033, 11034, 11035, 11036, 11037, 11038, #
11039, 11040, 11041, 11042, 11043, 11044, 11045, 11046, 11047, #
11048, 11049, 11050, 11051, 11052, 11053, 11054, 11055, 11056, #
11057, 11058, 11059, 11060, 11061, 11062, 11063, 11064, 11065, #
11066, 11067, 11068, 11069, 11070, 11071, 11072, 11073, 11074, #
11075, 11076, 11077, 11078, 11079, 11080, 11081, 11082, 11083, #
11084, 11085, 11086, 11087, 11088, 11089, 11090, 11091, 11092, #
11093, 11094, 11095, 11096, 11097, 11098, 11099, 11100, 11101, #
11102, 11103, 11104, 11105, 11106, 11107, 11108, 11109, 11110, #
11111, 11112, 11113, 11114, 11115, 11116, 11117, 11118, 11119, #
11120, 11121, 11122, 11123, 11124, 11125, 11126, 11127, 11128, #
11129, 11130, 11131, 11132, 11133, 11134, 11135, 11136, 11137, #
11138, 11139, 11140, 11141, 11142, 11143, 11144, 11145, 11146, #
11147, 11148, 11149, 11150, 11151, 11152, 11153, 11154, 11155, #
11156, 11157, 11158, 11159, 11160, 11161, 11162, 11163, 11164, #
11165, 11166, 11167, 11168, 11169, 11170, 11171, 11172, 11173, #
11174, 11175, 11176, 11177, 11178, 11179, 11180, 11181, 11182, #
11183, 11184, 11185, 11186, 11187, 11188, 11189, 11190, 11191, #
11192, 11193, 11194, 11195, 11196, 11197, 11198, 11199, 11200, #
11201, 11202, 11203, 11204, 11205, 11206, 11207, 11208, 11209, #
11210, 11211, 11212, 11213, 11214, 11215, 11216, 11217, 11218, #
11219, 11220, 11221, 11222, 11223, 11224, 11225, 11226, 11227, #
11228, 11229, 11230, 11231, 11232, 11233, 11234, 11235, 11236, #
11237, 11238, 11239, 11240, 11241, 11242, 11243, 11244, 11245, #
11246, 11247, 11248, 11249, 11250, 11251, 11252, 11253, 11254, #
11255, 11256, 11257, 11258, 11259, 11260, 11261, 11262, 11263, #
11264, 11265, 11266, 11267, 11268, 11269, 11270, 11271, 11272, #
11273, 11274, 11275, 11276, 11277, 11278, 11279, 11280, 11281, #
11282, 11283, 11284, 11285, 11286, 11287, 11288, 11289, 11290, #
11291, 11292, 11293, 11294, 11295, 11296, 11297, 11298, 11299, #
11300, 11301, 11302, 11303, 11304, 11305, 11306, 11307, 11308, #
11309, 11310, 11311, 11312, 11313, 11314, 11315, 11316, 11317, #
11318, 11319, 11320, 11321, 11322, 10957, 10958, 10959, 10960, #
10961, 10962, 10963, 10964, 10965, 10966, 10967, 10968, 10969, #
10970, 10971, 10972, 10973, 10974, 10975, 10976, 10977, 10978, #
10979, 10980, 10981, 10982, 10983, 10984, 10985, 10986, 10987, #
10988, 10989, 10990, 10991, 10992, 10993, 10994, 10995, 10996, #
10997, 10998, 10999, 11000, 11001, 11002, 11003, 11004, 11005, #
11006, 11007, 11008, 11009, 11010, 11011, 11012, 11013, 11014, #
11015, 11016, 11017, 11018, 11019, 11020, 11021, 11022, 11023, #
11024, 11025, 11026, 11027, 11028, 11029, 11030, 11031, 11032, #
11033, 11034, 11035, 11036, 11037, 11038, 11039, 11040, 11041, #
11042, 11043, 11044, 11045, 11046, 11047, 11048, 11049, 11050, #
11051, 11052, 11053, 11054, 11055, 11056, 11057, 11058, 11059, #
11060, 11061, 11062, 11063, 11064, 11065, 11066, 11067, 11068, #
11069, 11070, 11071, 11072, 11073, 11074, 11075, 11076, 11077, #
11078, 11079, 11080, 11081, 11082, 11083, 11084, 11085, 11086, #
11087, 11088, 11089, 11090, 11091, 11092, 11093, 11094, 11095, #
11096, 11097, 11098, 11099, 11100, 11101, 11102, 11103, 11104, #
11105, 11106, 11107, 11108, 11109, 11110, 11111, 11112, 11113, #
11114, 11115, 11116, 11117, 11118, 11119, 11120, 11121, 11122, #
11123, 11124, 11125, 11126, 11127, 11128, 11129, 11130, 11131, #
11132, 11133, 11134, 11135, 11136, 11137, 11138, 11139, 11140, #
11141, 11142, 11143, 11144, 11145, 11146, 11147, 11148, 11149, #
11150, 11151, 11152, 11153, 11154, 11155, 11156, 11157, 11158, #
11159, 11160, 11161, 11162, 11163, 11164, 11165, 11166, 11167, #
11168, 11169, 11170, 11171, 11172, 11173, 11174, 11175, 11176, #
11177, 11178, 11179, 11180, 11181, 11182, 11183, 11184, 11185, #
11186, 11187, 11188, 11189, 11190, 11191, 11192, 11193, 11194, #
11195, 11196, 11197, 11198, 11199, 11200, 11201, 11202, 11203, #
11204, 11205, 11206, 11207, 11208, 11209, 11210, 11211, 11212, #
11213, 11214, 11215, 11216, 11217, 11218, 11219, 11220, 11221, #
11222, 11223, 11224, 11225, 11226, 11227, 11228, 11229, 11230, #
11231, 11232, 11233, 11234, 11235, 11236, 11237, 11238, 11239, #
11240, 11241, 11242, 11243, 11244, 11245, 11246, 11247, 11248, #
11249, 11250, 11251, 11252, 11253, 11254, 11255, 11256, 11257, #
11258, 11259, 11260, 11261, 11262, 11263, 11264, 11265, 11266, #
11267, 11268, 11269, 11270, 11271, 11272, 11273, 11274, 11275, #
11276, 11277, 11278, 11279, 11280, 11281, 11282, 11283, 11284, #
11285, 11286, 11287, 11288, 11289, 11290, 11291, 11292, 11293, #
11294, 11295, 11296, 11297, 11298, 11299, 11300, 11301, 11302, #
11303, 11304, 11305, 11306, 11307, 11308, 11309, 11310, 11311, #
11312, 11313, 11314, 11315, 11316, 11317, 11318, 11319, 11320, #
11321, 11322), class = "Date"), variable = structure(c(7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, #
7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, #
10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, #
14L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, #
16L, 16L, 16L), .Label = c("Adjuntas", "Cayey", "Corozal", "DosBocas", #
"Guayama", "Gurabo", "Isabela", "Juncos", "Magueyes", "Manati", #
"Maunabo", "Mayaguez", "PicodelEste", "Ponce", "RooseveltRoads", #
"SanJuan"), class = "factor"), value = structure(c(1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, #
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, #
2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, #
3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 3L, 3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, #
2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, #
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, #
3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, #
3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, #
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 3L, #
3L, 3L, 3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
3L, 3L, 3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, #
3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, #
3L, 3L, 3L, 3L, 3L, 3L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, #
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, #
3L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, #
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, #
3L, 3L, 3L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, #
1L, 1L, 1L, 1L, 1L), .Label = c("0", "0.5", "1"), class = "factor")), .Names = c("Fecha", #
"variable", "value"), row.names = c(2197L, 2198L, 2199L, 2200L, #
2201L, 2202L, 2203L, 2204L, 2205L, 2206L, 2207L, 2208L, 2209L, #
2210L, 2211L, 2212L, 2213L, 2214L, 2215L, 2216L, 2217L, 2218L, #
2219L, 2220L, 2221L, 2222L, 2223L, 2224L, 2225L, 2226L, 2227L, #
2228L, 2229L, 2230L, 2231L, 2232L, 2233L, 2234L, 2235L, 2236L, #
2237L, 2238L, 2239L, 2240L, 2241L, 2242L, 2243L, 2244L, 2245L, #
2246L, 2247L, 2248L, 2249L, 2250L, 2251L, 2252L, 2253L, 2254L, #
2255L, 2256L, 2257L, 2258L, 2259L, 2260L, 2261L, 2262L, 2263L, #
2264L, 2265L, 2266L, 2267L, 2268L, 2269L, 2270L, 2271L, 2272L, #
2273L, 2274L, 2275L, 2276L, 2277L, 2278L, 2279L, 2280L, 2281L, #
2282L, 2283L, 2284L, 2285L, 2286L, 2287L, 2288L, 2289L, 2290L, #
2291L, 2292L, 2293L, 2294L, 2295L, 2296L, 2297L, 2298L, 2299L, #
2300L, 2301L, 2302L, 2303L, 2304L, 2305L, 2306L, 2307L, 2308L, #
2309L, 2310L, 2311L, 2312L, 2313L, 2314L, 2315L, 2316L, 2317L, #
2318L, 2319L, 2320L, 2321L, 2322L, 2323L, 2324L, 2325L, 2326L, #
2327L, 2328L, 2329L, 2330L, 2331L, 2332L, 2333L, 2334L, 2335L, #
2336L, 2337L, 2338L, 2339L, 2340L, 2341L, 2342L, 2343L, 2344L, #
2345L, 2346L, 2347L, 2348L, 2349L, 2350L, 2351L, 2352L, 2353L, #
2354L, 2355L, 2356L, 2357L, 2358L, 2359L, 2360L, 2361L, 2362L, #
2363L, 2364L, 2365L, 2366L, 2367L, 2368L, 2369L, 2370L, 2371L, #
2372L, 2373L, 2374L, 2375L, 2376L, 2377L, 2378L, 2379L, 2380L, #
2381L, 2382L, 2383L, 2384L, 2385L, 2386L, 2387L, 2388L, 2389L, #
2390L, 2391L, 2392L, 2393L, 2394L, 2395L, 2396L, 2397L, 2398L, #
2399L, 2400L, 2401L, 2402L, 2403L, 2404L, 2405L, 2406L, 2407L, #
2408L, 2409L, 2410L, 2411L, 2412L, 2413L, 2414L, 2415L, 2416L, #
2417L, 2418L, 2419L, 2420L, 2421L, 2422L, 2423L, 2424L, 2425L, #
2426L, 2427L, 2428L, 2429L, 2430L, 2431L, 2432L, 2433L, 2434L, #
2435L, 2436L, 2437L, 2438L, 2439L, 2440L, 2441L, 2442L, 2443L, #
2444L, 2445L, 2446L, 2447L, 2448L, 2449L, 2450L, 2451L, 2452L, #
2453L, 2454L, 2455L, 2456L, 2457L, 2458L, 2459L, 2460L, 2461L, #
2462L, 2463L, 2464L, 2465L, 2466L, 2467L, 2468L, 2469L, 2470L, #
2471L, 2472L, 2473L, 2474L, 2475L, 2476L, 2477L, 2478L, 2479L, #
2480L, 2481L, 2482L, 2483L, 2484L, 2485L, 2486L, 2487L, 2488L, #
2489L, 2490L, 2491L, 2492L, 2493L, 2494L, 2495L, 2496L, 2497L, #
2498L, 2499L, 2500L, 2501L, 2502L, 2503L, 2504L, 2505L, 2506L, #
2507L, 2508L, 2509L, 2510L, 2511L, 2512L, 2513L, 2514L, 2515L, #
2516L, 2517L, 2518L, 2519L, 2520L, 2521L, 2522L, 2523L, 2524L, #
2525L, 2526L, 2527L, 2528L, 2529L, 2530L, 2531L, 2532L, 2533L, #
2534L, 2535L, 2536L, 2537L, 2538L, 2539L, 2540L, 2541L, 2542L, #
2543L, 2544L, 2545L, 2546L, 2547L, 2548L, 2549L, 2550L, 2551L, #
2552L, 2553L, 2554L, 2555L, 2556L, 2557L, 2558L, 2559L, 2560L, #
2561L, 2562L, 3295L, 3296L, 3297L, 3298L, 3299L, 3300L, 3301L, #
3302L, 3303L, 3304L, 3305L, 3306L, 3307L, 3308L, 3309L, 3310L, #
3311L, 3312L, 3313L, 3314L, 3315L, 3316L, 3317L, 3318L, 3319L, #
3320L, 3321L, 3322L, 3323L, 3324L, 3325L, 3326L, 3327L, 3328L, #
3329L, 3330L, 3331L, 3332L, 3333L, 3334L, 3335L, 3336L, 3337L, #
3338L, 3339L, 3340L, 3341L, 3342L, 3343L, 3344L, 3345L, 3346L, #
3347L, 3348L, 3349L, 3350L, 3351L, 3352L, 3353L, 3354L, 3355L, #
3356L, 3357L, 3358L, 3359L, 3360L, 3361L, 3362L, 3363L, 3364L, #
3365L, 3366L, 3367L, 3368L, 3369L, 3370L, 3371L, 3372L, 3373L, #
3374L, 3375L, 3376L, 3377L, 3378L, 3379L, 3380L, 3381L, 3382L, #
3383L, 3384L, 3385L, 3386L, 3387L, 3388L, 3389L, 3390L, 3391L, #
3392L, 3393L, 3394L, 3395L, 3396L, 3397L, 3398L, 3399L, 3400L, #
3401L, 3402L, 3403L, 3404L, 3405L, 3406L, 3407L, 3408L, 3409L, #
3410L, 3411L, 3412L, 3413L, 3414L, 3415L, 3416L, 3417L, 3418L, #
3419L, 3420L, 3421L, 3422L, 3423L, 3424L, 3425L, 3426L, 3427L, #
3428L, 3429L, 3430L, 3431L, 3432L, 3433L, 3434L, 3435L, 3436L, #
3437L, 3438L, 3439L, 3440L, 3441L, 3442L, 3443L, 3444L, 3445L, #
3446L, 3447L, 3448L, 3449L, 3450L, 3451L, 3452L, 3453L, 3454L, #
3455L, 3456L, 3457L, 3458L, 3459L, 3460L, 3461L, 3462L, 3463L, #
3464L, 3465L, 3466L, 3467L, 3468L, 3469L, 3470L, 3471L, 3472L, #
3473L, 3474L, 3475L, 3476L, 3477L, 3478L, 3479L, 3480L, 3481L, #
3482L, 3483L, 3484L, 3485L, 3486L, 3487L, 3488L, 3489L, 3490L, #
3491L, 3492L, 3493L, 3494L, 3495L, 3496L, 3497L, 3498L, 3499L, #
3500L, 3501L, 3502L, 3503L, 3504L, 3505L, 3506L, 3507L, 3508L, #
3509L, 3510L, 3511L, 3512L, 3513L, 3514L, 3515L, 3516L, 3517L, #
3518L, 3519L, 3520L, 3521L, 3522L, 3523L, 3524L, 3525L, 3526L, #
3527L, 3528L, 3529L, 3530L, 3531L, 3532L, 3533L, 3534L, 3535L, #
3536L, 3537L, 3538L, 3539L, 3540L, 3541L, 3542L, 3543L, 3544L, #
3545L, 3546L, 3547L, 3548L, 3549L, 3550L, 3551L, 3552L, 3553L, #
3554L, 3555L, 3556L, 3557L, 3558L, 3559L, 3560L, 3561L, 3562L, #
3563L, 3564L, 3565L, 3566L, 3567L, 3568L, 3569L, 3570L, 3571L, #
3572L, 3573L, 3574L, 3575L, 3576L, 3577L, 3578L, 3579L, 3580L, #
3581L, 3582L, 3583L, 3584L, 3585L, 3586L, 3587L, 3588L, 3589L, #
3590L, 3591L, 3592L, 3593L, 3594L, 3595L, 3596L, 3597L, 3598L, #
3599L, 3600L, 3601L, 3602L, 3603L, 3604L, 3605L, 3606L, 3607L, #
3608L, 3609L, 3610L, 3611L, 3612L, 3613L, 3614L, 3615L, 3616L, #
3617L, 3618L, 3619L, 3620L, 3621L, 3622L, 3623L, 3624L, 3625L, #
3626L, 3627L, 3628L, 3629L, 3630L, 3631L, 3632L, 3633L, 3634L, #
3635L, 3636L, 3637L, 3638L, 3639L, 3640L, 3641L, 3642L, 3643L, #
3644L, 3645L, 3646L, 3647L, 3648L, 3649L, 3650L, 3651L, 3652L, #
3653L, 3654L, 3655L, 3656L, 3657L, 3658L, 3659L, 3660L, 4759L, #
4760L, 4761L, 4762L, 4763L, 4764L, 4765L, 4766L, 4767L, 4768L, #
4769L, 4770L, 4771L, 4772L, 4773L, 4774L, 4775L, 4776L, 4777L, #
4778L, 4779L, 4780L, 4781L, 4782L, 4783L, 4784L, 4785L, 4786L, #
4787L, 4788L, 4789L, 4790L, 4791L, 4792L, 4793L, 4794L, 4795L, #
4796L, 4797L, 4798L, 4799L, 4800L, 4801L, 4802L, 4803L, 4804L, #
4805L, 4806L, 4807L, 4808L, 4809L, 4810L, 4811L, 4812L, 4813L, #
4814L, 4815L, 4816L, 4817L, 4818L, 4819L, 4820L, 4821L, 4822L, #
4823L, 4824L, 4825L, 4826L, 4827L, 4828L, 4829L, 4830L, 4831L, #
4832L, 4833L, 4834L, 4835L, 4836L, 4837L, 4838L, 4839L, 4840L, #
4841L, 4842L, 4843L, 4844L, 4845L, 4846L, 4847L, 4848L, 4849L, #
4850L, 4851L, 4852L, 4853L, 4854L, 4855L, 4856L, 4857L, 4858L, #
4859L, 4860L, 4861L, 4862L, 4863L, 4864L, 4865L, 4866L, 4867L, #
4868L, 4869L, 4870L, 4871L, 4872L, 4873L, 4874L, 4875L, 4876L, #
4877L, 4878L, 4879L, 4880L, 4881L, 4882L, 4883L, 4884L, 4885L, #
4886L, 4887L, 4888L, 4889L, 4890L, 4891L, 4892L, 4893L, 4894L, #
4895L, 4896L, 4897L, 4898L, 4899L, 4900L, 4901L, 4902L, 4903L, #
4904L, 4905L, 4906L, 4907L, 4908L, 4909L, 4910L, 4911L, 4912L, #
4913L, 4914L, 4915L, 4916L, 4917L, 4918L, 4919L, 4920L, 4921L, #
4922L, 4923L, 4924L, 4925L, 4926L, 4927L, 4928L, 4929L, 4930L, #
4931L, 4932L, 4933L, 4934L, 4935L, 4936L, 4937L, 4938L, 4939L, #
4940L, 4941L, 4942L, 4943L, 4944L, 4945L, 4946L, 4947L, 4948L, #
4949L, 4950L, 4951L, 4952L, 4953L, 4954L, 4955L, 4956L, 4957L, #
4958L, 4959L, 4960L, 4961L, 4962L, 4963L, 4964L, 4965L, 4966L, #
4967L, 4968L, 4969L, 4970L, 4971L, 4972L, 4973L, 4974L, 4975L, #
4976L, 4977L, 4978L, 4979L, 4980L, 4981L, 4982L, 4983L, 4984L, #
4985L, 4986L, 4987L, 4988L, 4989L, 4990L, 4991L, 4992L, 4993L, #
4994L, 4995L, 4996L, 4997L, 4998L, 4999L, 5000L, 5001L, 5002L, #
5003L, 5004L, 5005L, 5006L, 5007L, 5008L, 5009L, 5010L, 5011L, #
5012L, 5013L, 5014L, 5015L, 5016L, 5017L, 5018L, 5019L, 5020L, #
5021L, 5022L, 5023L, 5024L, 5025L, 5026L, 5027L, 5028L, 5029L, #
5030L, 5031L, 5032L, 5033L, 5034L, 5035L, 5036L, 5037L, 5038L, #
5039L, 5040L, 5041L, 5042L, 5043L, 5044L, 5045L, 5046L, 5047L, #
5048L, 5049L, 5050L, 5051L, 5052L, 5053L, 5054L, 5055L, 5056L, #
5057L, 5058L, 5059L, 5060L, 5061L, 5062L, 5063L, 5064L, 5065L, #
5066L, 5067L, 5068L, 5069L, 5070L, 5071L, 5072L, 5073L, 5074L, #
5075L, 5076L, 5077L, 5078L, 5079L, 5080L, 5081L, 5082L, 5083L, #
5084L, 5085L, 5086L, 5087L, 5088L, 5089L, 5090L, 5091L, 5092L, #
5093L, 5094L, 5095L, 5096L, 5097L, 5098L, 5099L, 5100L, 5101L, #
5102L, 5103L, 5104L, 5105L, 5106L, 5107L, 5108L, 5109L, 5110L, #
5111L, 5112L, 5113L, 5114L, 5115L, 5116L, 5117L, 5118L, 5119L, #
5120L, 5121L, 5122L, 5123L, 5124L, 5491L, 5492L, 5493L, 5494L, #
5495L, 5496L, 5497L, 5498L, 5499L, 5500L, 5501L, 5502L, 5503L, #
5504L, 5505L, 5506L, 5507L, 5508L, 5509L, 5510L, 5511L, 5512L, #
5513L, 5514L, 5515L, 5516L, 5517L, 5518L, 5519L, 5520L, 5521L, #
5522L, 5523L, 5524L, 5525L, 5526L, 5527L, 5528L, 5529L, 5530L, #
5531L, 5532L, 5533L, 5534L, 5535L, 5536L, 5537L, 5538L, 5539L, #
5540L, 5541L, 5542L, 5543L, 5544L, 5545L, 5546L, 5547L, 5548L, #
5549L, 5550L, 5551L, 5552L, 5553L, 5554L, 5555L, 5556L, 5557L, #
5558L, 5559L, 5560L, 5561L, 5562L, 5563L, 5564L, 5565L, 5566L, #
5567L, 5568L, 5569L, 5570L, 5571L, 5572L, 5573L, 5574L, 5575L, #
5576L, 5577L, 5578L, 5579L, 5580L, 5581L, 5582L, 5583L, 5584L, #
5585L, 5586L, 5587L, 5588L, 5589L, 5590L, 5591L, 5592L, 5593L, #
5594L, 5595L, 5596L, 5597L, 5598L, 5599L, 5600L, 5601L, 5602L, #
5603L, 5604L, 5605L, 5606L, 5607L, 5608L, 5609L, 5610L, 5611L, #
5612L, 5613L, 5614L, 5615L, 5616L, 5617L, 5618L, 5619L, 5620L, #
5621L, 5622L, 5623L, 5624L, 5625L, 5626L, 5627L, 5628L, 5629L, #
5630L, 5631L, 5632L, 5633L, 5634L, 5635L, 5636L, 5637L, 5638L, #
5639L, 5640L, 5641L, 5642L, 5643L, 5644L, 5645L, 5646L, 5647L, #
5648L, 5649L, 5650L, 5651L, 5652L, 5653L, 5654L, 5655L, 5656L, #
5657L, 5658L, 5659L, 5660L, 5661L, 5662L, 5663L, 5664L, 5665L, #
5666L, 5667L, 5668L, 5669L, 5670L, 5671L, 5672L, 5673L, 5674L, #
5675L, 5676L, 5677L, 5678L, 5679L, 5680L, 5681L, 5682L, 5683L, #
5684L, 5685L, 5686L, 5687L, 5688L, 5689L, 5690L, 5691L, 5692L, #
5693L, 5694L, 5695L, 5696L, 5697L, 5698L, 5699L, 5700L, 5701L, #
5702L, 5703L, 5704L, 5705L, 5706L, 5707L, 5708L, 5709L, 5710L, #
5711L, 5712L, 5713L, 5714L, 5715L, 5716L, 5717L, 5718L, 5719L, #
5720L, 5721L, 5722L, 5723L, 5724L, 5725L, 5726L, 5727L, 5728L, #
5729L, 5730L, 5731L, 5732L, 5733L, 5734L, 5735L, 5736L, 5737L, #
5738L, 5739L, 5740L, 5741L, 5742L, 5743L, 5744L, 5745L, 5746L, #
5747L, 5748L, 5749L, 5750L, 5751L, 5752L, 5753L, 5754L, 5755L, #
5756L, 5757L, 5758L, 5759L, 5760L, 5761L, 5762L, 5763L, 5764L, #
5765L, 5766L, 5767L, 5768L, 5769L, 5770L, 5771L, 5772L, 5773L, #
5774L, 5775L, 5776L, 5777L, 5778L, 5779L, 5780L, 5781L, 5782L, #
5783L, 5784L, 5785L, 5786L, 5787L, 5788L, 5789L, 5790L, 5791L, #
5792L, 5793L, 5794L, 5795L, 5796L, 5797L, 5798L, 5799L, 5800L, #
5801L, 5802L, 5803L, 5804L, 5805L, 5806L, 5807L, 5808L, 5809L, #
5810L, 5811L, 5812L, 5813L, 5814L, 5815L, 5816L, 5817L, 5818L, #
5819L, 5820L, 5821L, 5822L, 5823L, 5824L, 5825L, 5826L, 5827L, #
5828L, 5829L, 5830L, 5831L, 5832L, 5833L, 5834L, 5835L, 5836L, #
5837L, 5838L, 5839L, 5840L, 5841L, 5842L, 5843L, 5844L, 5845L, #
5846L, 5847L, 5848L, 5849L, 5850L, 5851L, 5852L, 5853L, 5854L, #
5855L, 5856L), class = "data.frame")
summary(data3.a)
nrow(data3.a)
library(ggplot2)
base_size <- 9#
q <- ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value),colour = "grey95") + scale_fill_manual(values=c("grey95","black","blue"))+#
  theme_grey(base_size = 9) + labs(x = "", y = "") +scale_x_date(breaks=date_breaks("months"),labels=date_format("%d/%m"))+#
  scale_y_discrete(expand = c(0, 0)) +  theme(legend.position = "none",#
  axis.ticks = element_blank(), axis.text.x = element_text(size = 9*0.8, angle = 330, hjust = 0, colour = "grey20"))#
  q + geom_vline(xintercept = 30, colour="green", linetype = "longdash")
library(scales)
base_size <- 9#
q <- ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value),colour = "grey95") + scale_fill_manual(values=c("grey95","black","blue"))+#
  theme_grey(base_size = 9) + labs(x = "", y = "") +scale_x_date(breaks=date_breaks("months"),labels=date_format("%d/%m"))+#
  scale_y_discrete(expand = c(0, 0)) +  theme(legend.position = "none",#
  axis.ticks = element_blank(), axis.text.x = element_text(size = 9*0.8, angle = 330, hjust = 0, colour = "grey20"))#
  q + geom_vline(xintercept = 30, colour="green", linetype = "longdash")
base_size <- 9#
q <- ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value),colour = "grey95") + scale_fill_manual(values=c("grey95","black","blue"))+#
  theme_grey(base_size = 9) + labs(x = "", y = "") +scale_x_date(breaks=date_breaks("months"),labels=date_format("%d/%m"))+#
  scale_y_discrete(expand = c(0, 0)) +  theme(legend.position = "none",#
  axis.ticks = element_blank(), axis.text.x = element_text(size = 9*0.8, angle = 330, hjust = 0, colour = "grey20"))
q
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value),colour = "grey95")
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value),colour = "grey95")+geom_vline(xintercept=30)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value),colour = "grey95")
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value),colour = "grey95")+geom_vline(xintercept=30)
base_size <- 9#
q <- ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value),colour = "grey95") + scale_fill_manual(values=c("grey95","black","blue"))+#
  theme_grey(base_size = 9) + labs(x = "", y = "") +scale_x_date(breaks=date_breaks("months"),labels=date_format("%d/%m"))+#
  scale_y_discrete(expand = c(0, 0)) +  theme(legend.position = "none",#
  axis.ticks = element_blank(), axis.text.x = element_text(size = 9*0.8, angle = 330, hjust = 0, colour = "grey20"))#
  q + geom_vline(xintercept = 30, colour="green", linetype = "longdash")
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 30)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 40)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 50)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 80)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 180)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 1800)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 18000)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 5800)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 10800)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 12800)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 11800)
ggplot(data3.a, aes(Fecha, variable)) + geom_tile(aes(fill = value))+ geom_vline(xintercept = 11000)
?cut
cut(1:10,breaks=c(3,6))
cut(1:10,breaks=c(3,6,9))
cut(1:10,breaks=c(0,6,9))
cut(1:10,breaks=c(0,3,7,11))
?cut
df <- data.frame(x=1:10,y=1:10)
df$group <- cut(df$y,breaks=c(0,3,7,10))
df
library(ggplot2)
qplot(x,y,data=df,color=group)
df
df$group <- cut(df$y,breaks=c(3,7,10))
df
df$group <- cut(df$y,breaks=c(0,3,7))
df
?diff
?complete.cases
?tryCatch
library(ggplot2)
?theme
?missing
install.packages("ggsubplot")
library(ggsubplot)
help(package=ggsubplot)
ggplot(casualties) +map_afghanistan +geom_point(aes(lon, lat, color = victim)) + coord_map()
library(ggsubplot)
ggplot(casualties) +map_afghanistan +geom_point(aes(lon, lat, color = victim)) + coord_map()
library(ggplot2)
ggplot(casualties) +map_afghanistan +geom_point(aes(lon, lat, color = victim)) + coord_map()
ggplot(nasa) +geom_point(aes(surftemp, temperature))
ggplot(nasa) +map_americas +geom_subplot(aes(long, lat, group = id,subplot = geom_point(aes(surftemp, temperature), size = 1/4))) + coord_map()
source("srdb.R")
srdb[623,]
srdb[625,]
srdb[c(623,625,627,1794,209),]
srdb[c(623,625,627,1794,2098),]
source("srdb.R")
srdb[c(623,625,627,1794,2098),]
srdb$Soil_drainage %in% c("Wet","Dry")
levels(srdb$Soil_drainage)
srdb[c(623,625,627,1794,2098),]
source("srdb.R")
srdb[3487,]
check_labels <- function( d, labs ) {		# d should be ascending range#
	inlabs <- d %in% labs#
	if( any( labs, na.rm=T ) ) {#
		message( paste( deparse( substitute( d ) ), "not in labels ", labs ) )#
		message( paste( "- in records:", paste( which( labs ), collapse=" " ) ) )	#
	}#
}
check_labels(srdb$Soil_drainage,c("Dry","Wet"))
srdb$Soil_drainage %in% c("Dry","Wet")
check_labels <- function( d, labs ) {		# d should be ascending range#
	inlabs <- d %in% labs#
	if( any( inlabs, na.rm=T ) ) {#
		message( paste( deparse( substitute( d ) ), "not in labels ", labs ) )#
		message( paste( "- in records:", paste( which( labs ), collapse=" " ) ) )	#
	}#
}
check_labels(srdb$Soil_drainage,c("Dry","Wet"))
check_labels <- function( d, labs ) {		# d should be ascending range#
	inlabs <- d %in% labs#
	if( any( inlabs, na.rm=T ) ) {#
		message( paste( deparse( substitute( d ) ), "not in labels", paste( labs, collapse=" " ) ) )#
		message( paste( "- in records:", paste( which( labs ), collapse=" " ) ) )	#
	}#
}
check_labels(srdb$Soil_drainage,c("Dry","Wet"))
check_labels <- function( d, labs ) {		# d should be ascending range#
	inlabs <- d %in% labs#
	if( any( inlabs, na.rm=T ) ) {#
		message( paste( deparse( substitute( d ) ), "not in labels", paste( labs, collapse=" " ) ) )#
		message( paste( "- in records:", paste( which( inlabs ), collapse=" " ) ) )	#
	}#
}
check_labels(srdb$Soil_drainage,c("Dry","Wet"))
levels(srdb$Soil_drainage)
check_labels(srdb$Soil_drainage,c("Dry","Wet","Mixed"))
check_labels(srdb$Soil_drainage,c("Dry","Wet","Mixed","Medium"))
check_labels <- function( d, labs ) {		# d should be ascending range#
	inlabs <- d %in% labs#
	if( any( !inlabs, na.rm=T ) ) {#
		message( paste( deparse( substitute( d ) ), "not in labels", paste( labs, collapse=" " ) ) )#
		message( paste( "- in records:", paste( which( !inlabs ), collapse=" " ) ) )	#
	}#
}
check_labels(srdb$Soil_drainage,c("Dry","Wet","Mixed","Medium"))
check_labels(srdb$Soil_drainage,c("Dry","Wet","Mixed"))
check_labels(srdb$Soil_drainage,c("Dry","Wet"))
check_labels <- function( d, labs, dname=deparse( substitute( d ) ) ) {		# d should be ascending range#
	printlog( "Checking", dname, "in", paste( labs, collapse=" " ) )#
	inlabs <- d %in% labs#
	if( any( !inlabs, na.rm=T ) ) {#
		message( paste( dname, "not in labels", paste( labs, collapse=" " ) ) )#
		message( paste( "- in records:", paste( which( !inlabs ), collapse=" " ) ) )	#
	}#
}
check_labels(srdb$Soil_drainage,c("Dry","Wet"))
check_labels <- function( d, labs, dname=deparse( substitute( d ) ) ) {		# d should be ascending range#
	printlog( "Checking", dname, "in (", paste( labs, collapse="," ), ")" )#
	inlabs <- d %in% labs#
	if( any( !inlabs, na.rm=T ) ) {#
		message( paste( dname, "not in labels", paste( labs, collapse=" " ) ) )#
		message( paste( "- in records:", paste( which( !inlabs ), collapse=" " ) ) )	#
	}#
}
check_labels(srdb$Soil_drainage,c("Dry","Wet"))
source("srdb.R")
source("srdb.R")
srdb[5174,]
source("srdb.R")
